#!/usr/bin/env ruby
require 'stomp'
require 'xmlsimple'
require "brpm_script_executor"

BrpmAuto.initialize_logger(ENV["EVENT_HANDLER_LOG_FILE"])

host = ENV["EVENT_HANDLER_BRPM_HOST"]
port = ENV["EVENT_HANDLER_MESSAGING_PORT"]
username = ENV["EVENT_HANDLER_MESSAGING_USERNAME"]
password = ENV["EVENT_HANDLER_MESSAGING_PASSWORD"]
process_event_script = ENV["EVENT_HANDLER_PROCESS_EVENT_SCRIPT"]
messaging_path = "jms.topic./topics/messaging/brpm_event_queue"

require process_event_script

def process(message)
  begin
    BrpmAuto.log "Processing new event..."
    BrpmAuto.log "Message content:" if ENV["EVENT_HANDLER_LOG_EVENT"]=="1"
    BrpmAuto.log message if ENV["EVENT_HANDLER_LOG_EVENT"]=="1"
    xml = "<root>#{message}</root>"

    event = XmlSimple.xml_in(xml)

    process_event(event)

  rescue Exception => e
    BrpmAuto.log_error(e)
    BrpmAuto.log "\n\t" + e.backtrace.join("\n\t")
  end
end

begin

  BrpmAuto.log "Connecting to the BRPM event system ..."
  client = Stomp::Client.new username, password, host, port, true

  BrpmAuto.log "Subscribing to the BRPM event queue ..."
  client.subscribe messaging_path do |message|
    process(Marshal.load(message.body))
  end

  loop do
    sleep 1
  end

rescue Exception => e
  BrpmAuto.log_error(e)
  BrpmAuto.log "\n\t" + e.backtrace.join("\n\t")

  raise e
end
